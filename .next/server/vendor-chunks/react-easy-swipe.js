/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/react-easy-swipe";
exports.ids = ["vendor-chunks/react-easy-swipe"];
exports.modules = {

/***/ "(ssr)/./node_modules/react-easy-swipe/lib/index.js":
/*!****************************************************!*\
  !*** ./node_modules/react-easy-swipe/lib/index.js ***!
  \****************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function(global, factory) {\n    if (true) {\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n            exports,\n            __webpack_require__(/*! ./react-swipe */ \"(ssr)/./node_modules/react-easy-swipe/lib/react-swipe.js\")\n        ], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    } else { var mod; }\n})(this, function(exports1, _reactSwipe) {\n    \"use strict\";\n    Object.defineProperty(exports1, \"__esModule\", {\n        value: true\n    });\n    var _reactSwipe2 = _interopRequireDefault(_reactSwipe);\n    function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n            default: obj\n        };\n    }\n    exports1.default = _reactSwipe2.default;\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVhY3QtZWFzeS1zd2lwZS9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQUMsMEdBQVVBLE1BQU0sRUFBRUMsT0FBTztJQUN4QixJQUFJLElBQTBDLEVBQUU7UUFDOUNDLGlDQUFPO1lBQUM7WUFBVztTQUFnQixvQ0FBRUQsT0FBT0E7QUFBQTtBQUFBO0FBQUEsa0dBQUNBO0lBQy9DLE9BQU8sWUFRTjtBQUNILEdBQUcsSUFBSSxFQUFFLFNBQVVHLFFBQU8sRUFBRUssV0FBVztJQUNyQztJQUVBQyxPQUFPQyxjQUFjLENBQUNQLFVBQVMsY0FBYztRQUMzQ1EsT0FBTztJQUNUO0lBRUEsSUFBSUMsZUFBZUMsdUJBQXVCTDtJQUUxQyxTQUFTSyx1QkFBdUJDLEdBQUc7UUFDakMsT0FBT0EsT0FBT0EsSUFBSUMsVUFBVSxHQUFHRCxNQUFNO1lBQ25DRSxTQUFTRjtRQUNYO0lBQ0Y7SUFFQVgsU0FBUWEsT0FBTyxHQUFHSixhQUFhSSxPQUFPO0FBQ3hDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcHJpY2V3aXNlLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWVhc3ktc3dpcGUvbGliL2luZGV4LmpzPzMyN2QiXSwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIChnbG9iYWwsIGZhY3RvcnkpIHtcbiAgaWYgKHR5cGVvZiBkZWZpbmUgPT09IFwiZnVuY3Rpb25cIiAmJiBkZWZpbmUuYW1kKSB7XG4gICAgZGVmaW5lKFsnZXhwb3J0cycsICcuL3JlYWN0LXN3aXBlJ10sIGZhY3RvcnkpO1xuICB9IGVsc2UgaWYgKHR5cGVvZiBleHBvcnRzICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgZmFjdG9yeShleHBvcnRzLCByZXF1aXJlKCcuL3JlYWN0LXN3aXBlJykpO1xuICB9IGVsc2Uge1xuICAgIHZhciBtb2QgPSB7XG4gICAgICBleHBvcnRzOiB7fVxuICAgIH07XG4gICAgZmFjdG9yeShtb2QuZXhwb3J0cywgZ2xvYmFsLnJlYWN0U3dpcGUpO1xuICAgIGdsb2JhbC5pbmRleCA9IG1vZC5leHBvcnRzO1xuICB9XG59KSh0aGlzLCBmdW5jdGlvbiAoZXhwb3J0cywgX3JlYWN0U3dpcGUpIHtcbiAgJ3VzZSBzdHJpY3QnO1xuXG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG4gIH0pO1xuXG4gIHZhciBfcmVhY3RTd2lwZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9yZWFjdFN3aXBlKTtcblxuICBmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikge1xuICAgIHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7XG4gICAgICBkZWZhdWx0OiBvYmpcbiAgICB9O1xuICB9XG5cbiAgZXhwb3J0cy5kZWZhdWx0ID0gX3JlYWN0U3dpcGUyLmRlZmF1bHQ7XG59KTsiXSwibmFtZXMiOlsiZ2xvYmFsIiwiZmFjdG9yeSIsImRlZmluZSIsImFtZCIsImV4cG9ydHMiLCJyZXF1aXJlIiwibW9kIiwicmVhY3RTd2lwZSIsImluZGV4IiwiX3JlYWN0U3dpcGUiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsInZhbHVlIiwiX3JlYWN0U3dpcGUyIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsIm9iaiIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-easy-swipe/lib/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/react-easy-swipe/lib/react-swipe.js":
/*!**********************************************************!*\
  !*** ./node_modules/react-easy-swipe/lib/react-swipe.js ***!
  \**********************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function(global, factory) {\n    if (true) {\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n            exports,\n            __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"),\n            __webpack_require__(/*! prop-types */ \"(ssr)/./node_modules/prop-types/index.js\")\n        ], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    } else { var mod; }\n})(this, function(exports1, _react, _propTypes) {\n    \"use strict\";\n    Object.defineProperty(exports1, \"__esModule\", {\n        value: true\n    });\n    exports1.setHasSupportToCaptureOption = setHasSupportToCaptureOption;\n    var _react2 = _interopRequireDefault(_react);\n    var _propTypes2 = _interopRequireDefault(_propTypes);\n    function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n            default: obj\n        };\n    }\n    var _extends = Object.assign || function(target) {\n        for(var i = 1; i < arguments.length; i++){\n            var source = arguments[i];\n            for(var key in source){\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    };\n    function _objectWithoutProperties(obj, keys) {\n        var target = {};\n        for(var i in obj){\n            if (keys.indexOf(i) >= 0) continue;\n            if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n            target[i] = obj[i];\n        }\n        return target;\n    }\n    function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n        }\n    }\n    var _createClass = function() {\n        function defineProperties(target, props) {\n            for(var i = 0; i < props.length; i++){\n                var descriptor = props[i];\n                descriptor.enumerable = descriptor.enumerable || false;\n                descriptor.configurable = true;\n                if (\"value\" in descriptor) descriptor.writable = true;\n                Object.defineProperty(target, descriptor.key, descriptor);\n            }\n        }\n        return function(Constructor, protoProps, staticProps) {\n            if (protoProps) defineProperties(Constructor.prototype, protoProps);\n            if (staticProps) defineProperties(Constructor, staticProps);\n            return Constructor;\n        };\n    }();\n    function _possibleConstructorReturn(self, call) {\n        if (!self) {\n            throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n        }\n        return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n    }\n    function _inherits(subClass, superClass) {\n        if (typeof superClass !== \"function\" && superClass !== null) {\n            throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n        }\n        subClass.prototype = Object.create(superClass && superClass.prototype, {\n            constructor: {\n                value: subClass,\n                enumerable: false,\n                writable: true,\n                configurable: true\n            }\n        });\n        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n    }\n    var supportsCaptureOption = false;\n    function setHasSupportToCaptureOption(hasSupport) {\n        supportsCaptureOption = hasSupport;\n    }\n    try {\n        addEventListener(\"test\", null, Object.defineProperty({}, \"capture\", {\n            get: function get() {\n                setHasSupportToCaptureOption(true);\n            }\n        }));\n    } catch (e) {} // eslint-disable-line no-empty\n    function getSafeEventHandlerOpts() {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n            capture: true\n        };\n        return supportsCaptureOption ? options : options.capture;\n    }\n    /**\n   * [getPosition returns a position element that works for mouse or touch events]\n   * @param  {[Event]} event [the received event]\n   * @return {[Object]}      [x and y coords]\n   */ function getPosition(event) {\n        if (\"touches\" in event) {\n            var _event$touches$ = event.touches[0], pageX = _event$touches$.pageX, pageY = _event$touches$.pageY;\n            return {\n                x: pageX,\n                y: pageY\n            };\n        }\n        var screenX = event.screenX, screenY = event.screenY;\n        return {\n            x: screenX,\n            y: screenY\n        };\n    }\n    var ReactSwipe = function(_Component) {\n        _inherits(ReactSwipe, _Component);\n        function ReactSwipe() {\n            var _ref;\n            _classCallCheck(this, ReactSwipe);\n            for(var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++){\n                args[_key] = arguments[_key];\n            }\n            var _this = _possibleConstructorReturn(this, (_ref = ReactSwipe.__proto__ || Object.getPrototypeOf(ReactSwipe)).call.apply(_ref, [\n                this\n            ].concat(args)));\n            _this._handleSwipeStart = _this._handleSwipeStart.bind(_this);\n            _this._handleSwipeMove = _this._handleSwipeMove.bind(_this);\n            _this._handleSwipeEnd = _this._handleSwipeEnd.bind(_this);\n            _this._onMouseDown = _this._onMouseDown.bind(_this);\n            _this._onMouseMove = _this._onMouseMove.bind(_this);\n            _this._onMouseUp = _this._onMouseUp.bind(_this);\n            _this._setSwiperRef = _this._setSwiperRef.bind(_this);\n            return _this;\n        }\n        _createClass(ReactSwipe, [\n            {\n                key: \"componentDidMount\",\n                value: function componentDidMount() {\n                    if (this.swiper) {\n                        this.swiper.addEventListener(\"touchmove\", this._handleSwipeMove, getSafeEventHandlerOpts({\n                            capture: true,\n                            passive: false\n                        }));\n                    }\n                }\n            },\n            {\n                key: \"componentWillUnmount\",\n                value: function componentWillUnmount() {\n                    if (this.swiper) {\n                        this.swiper.removeEventListener(\"touchmove\", this._handleSwipeMove, getSafeEventHandlerOpts({\n                            capture: true,\n                            passive: false\n                        }));\n                    }\n                }\n            },\n            {\n                key: \"_onMouseDown\",\n                value: function _onMouseDown(event) {\n                    if (!this.props.allowMouseEvents) {\n                        return;\n                    }\n                    this.mouseDown = true;\n                    document.addEventListener(\"mouseup\", this._onMouseUp);\n                    document.addEventListener(\"mousemove\", this._onMouseMove);\n                    this._handleSwipeStart(event);\n                }\n            },\n            {\n                key: \"_onMouseMove\",\n                value: function _onMouseMove(event) {\n                    if (!this.mouseDown) {\n                        return;\n                    }\n                    this._handleSwipeMove(event);\n                }\n            },\n            {\n                key: \"_onMouseUp\",\n                value: function _onMouseUp(event) {\n                    this.mouseDown = false;\n                    document.removeEventListener(\"mouseup\", this._onMouseUp);\n                    document.removeEventListener(\"mousemove\", this._onMouseMove);\n                    this._handleSwipeEnd(event);\n                }\n            },\n            {\n                key: \"_handleSwipeStart\",\n                value: function _handleSwipeStart(event) {\n                    var _getPosition = getPosition(event), x = _getPosition.x, y = _getPosition.y;\n                    this.moveStart = {\n                        x: x,\n                        y: y\n                    };\n                    this.props.onSwipeStart(event);\n                }\n            },\n            {\n                key: \"_handleSwipeMove\",\n                value: function _handleSwipeMove(event) {\n                    if (!this.moveStart) {\n                        return;\n                    }\n                    var _getPosition2 = getPosition(event), x = _getPosition2.x, y = _getPosition2.y;\n                    var deltaX = x - this.moveStart.x;\n                    var deltaY = y - this.moveStart.y;\n                    this.moving = true;\n                    // handling the responsability of cancelling the scroll to\n                    // the component handling the event\n                    var shouldPreventDefault = this.props.onSwipeMove({\n                        x: deltaX,\n                        y: deltaY\n                    }, event);\n                    if (shouldPreventDefault && event.cancelable) {\n                        event.preventDefault();\n                    }\n                    this.movePosition = {\n                        deltaX: deltaX,\n                        deltaY: deltaY\n                    };\n                }\n            },\n            {\n                key: \"_handleSwipeEnd\",\n                value: function _handleSwipeEnd(event) {\n                    this.props.onSwipeEnd(event);\n                    var tolerance = this.props.tolerance;\n                    if (this.moving && this.movePosition) {\n                        if (this.movePosition.deltaX < -tolerance) {\n                            this.props.onSwipeLeft(1, event);\n                        } else if (this.movePosition.deltaX > tolerance) {\n                            this.props.onSwipeRight(1, event);\n                        }\n                        if (this.movePosition.deltaY < -tolerance) {\n                            this.props.onSwipeUp(1, event);\n                        } else if (this.movePosition.deltaY > tolerance) {\n                            this.props.onSwipeDown(1, event);\n                        }\n                    }\n                    this.moveStart = null;\n                    this.moving = false;\n                    this.movePosition = null;\n                }\n            },\n            {\n                key: \"_setSwiperRef\",\n                value: function _setSwiperRef(node) {\n                    this.swiper = node;\n                    this.props.innerRef(node);\n                }\n            },\n            {\n                key: \"render\",\n                value: function render() {\n                    var _props = this.props, tagName = _props.tagName, className = _props.className, style = _props.style, children = _props.children, allowMouseEvents = _props.allowMouseEvents, onSwipeUp = _props.onSwipeUp, onSwipeDown = _props.onSwipeDown, onSwipeLeft = _props.onSwipeLeft, onSwipeRight = _props.onSwipeRight, onSwipeStart = _props.onSwipeStart, onSwipeMove = _props.onSwipeMove, onSwipeEnd = _props.onSwipeEnd, innerRef = _props.innerRef, tolerance = _props.tolerance, props = _objectWithoutProperties(_props, [\n                        \"tagName\",\n                        \"className\",\n                        \"style\",\n                        \"children\",\n                        \"allowMouseEvents\",\n                        \"onSwipeUp\",\n                        \"onSwipeDown\",\n                        \"onSwipeLeft\",\n                        \"onSwipeRight\",\n                        \"onSwipeStart\",\n                        \"onSwipeMove\",\n                        \"onSwipeEnd\",\n                        \"innerRef\",\n                        \"tolerance\"\n                    ]);\n                    return _react2.default.createElement(this.props.tagName, _extends({\n                        ref: this._setSwiperRef,\n                        onMouseDown: this._onMouseDown,\n                        onTouchStart: this._handleSwipeStart,\n                        onTouchEnd: this._handleSwipeEnd,\n                        className: className,\n                        style: style\n                    }, props), children);\n                }\n            }\n        ]);\n        return ReactSwipe;\n    }(_react.Component);\n    ReactSwipe.displayName = \"ReactSwipe\";\n    ReactSwipe.propTypes = {\n        tagName: _propTypes2.default.string,\n        className: _propTypes2.default.string,\n        style: _propTypes2.default.object,\n        children: _propTypes2.default.node,\n        allowMouseEvents: _propTypes2.default.bool,\n        onSwipeUp: _propTypes2.default.func,\n        onSwipeDown: _propTypes2.default.func,\n        onSwipeLeft: _propTypes2.default.func,\n        onSwipeRight: _propTypes2.default.func,\n        onSwipeStart: _propTypes2.default.func,\n        onSwipeMove: _propTypes2.default.func,\n        onSwipeEnd: _propTypes2.default.func,\n        innerRef: _propTypes2.default.func,\n        tolerance: _propTypes2.default.number.isRequired\n    };\n    ReactSwipe.defaultProps = {\n        tagName: \"div\",\n        allowMouseEvents: false,\n        onSwipeUp: function onSwipeUp() {},\n        onSwipeDown: function onSwipeDown() {},\n        onSwipeLeft: function onSwipeLeft() {},\n        onSwipeRight: function onSwipeRight() {},\n        onSwipeStart: function onSwipeStart() {},\n        onSwipeMove: function onSwipeMove() {},\n        onSwipeEnd: function onSwipeEnd() {},\n        innerRef: function innerRef() {},\n        tolerance: 0\n    };\n    exports1.default = ReactSwipe;\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-easy-swipe/lib/react-swipe.js\n");

/***/ })

};
;